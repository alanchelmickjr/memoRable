version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/memorable?authSource=admin
      - REDIS_URL=redis://redis:6379
      - WEAVIATE_URL=http://weaviate:8080
      - OLLAMA_API_KEY=${OLLAMA_API_KEY}
      - EMOTION_THRESHOLD=${EMOTION_THRESHOLD:-0.7}
      - EMOTION_UPDATE_INTERVAL=${EMOTION_UPDATE_INTERVAL:-5000}
      - MEMORY_WINDOW_SHORT=${MEMORY_WINDOW_SHORT:-1200000}
      - MEMORY_WINDOW_MEDIUM=${MEMORY_WINDOW_MEDIUM:-3600000}
      - MEMORY_WINDOW_LONG=${MEMORY_WINDOW_LONG:-86400000}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: ${if [ "${NODE_ENV:-development}" = "production" ]; then echo "16G"; else echo "4G"; fi}
        reservations:
          cpus: '4'
          memory: ${if [ "${NODE_ENV:-development}" = "production" ]; then echo "8G"; else echo "2G"; fi}
    healthcheck:
      test: /usr/local/bin/health.sh
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "autoheal=true"

  night-processor:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: node src/services/nightProcessingService.js
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/memorable?authSource=admin
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    restart: always
    depends_on:
      - app
      - mongodb
    networks:
      - memorable_net
    labels:
      - "com.docker.scheduling.cron=0 1 * * * America/Los_Angeles"
      - "com.docker.scheduling.duration=3h"

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          memory: 1G
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 2gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: semitechnologies/weaviate:latest
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://t2v-transformer:8080
      - LIMIT_MEMORY=${WEAVIATE_MEMORY:-4Gi}
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  t2v-transformer:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      - ENABLE_CUDA=0
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: ${if [ "${NODE_ENV:-development}" = "production" ]; then echo "24G"; else echo "8G"; fi}
        reservations:
          memory: ${if [ "${NODE_ENV:-development}" = "production" ]; then echo "16G"; else echo "4G"; fi}
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  autoheal:
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=5
      - AUTOHEAL_START_PERIOD=300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - memorable_net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    command:
      - '--mongodb.uri=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/memorable?authSource=admin'
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  redis-exporter:
    image: oliver006/redis_exporter:latest
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - memorable_net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
  weaviate_data:
    driver: local
  ollama_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  memorable_net:
    driver: bridge